apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "kube-green.com/v1alpha1",
          "kind": "SleepInfo",
          "metadata": {
            "labels": {
              "app": "kube-green"
            },
            "name": "sleepinfo-sample"
          },
          "spec": {
            "excludeRef": [
              {
                "apiVersion": "apps/v1",
                "kind": "Deployment",
                "name": "api-gateway"
              }
            ],
            "sleepAt": "20:00",
            "suspendCronJobs": true,
            "timeZone": "Europe/Rome",
            "wakeUpAt": "08:00",
            "weekdays": "1-5"
          }
        }
      ]
    capabilities: Seamless Upgrades
    categories: Developer Tools
    containerImage: docker.io/kubegreen/kube-green:0.6.0-rc.0
    createdAt: "2024-03-17T15:41:49Z"
    description: Suspend your pods when no-one's using them to save energy and restore
      when necessary
    operators.operatorframework.io/builder: operator-sdk-v1.34.1
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    repository: https://github.com/kube-green/kube-green
    support: kube-green Community
  labels:
    app: kube-green
  name: kube-green.v0.6.0-rc.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: SleepInfo is the Schema for the sleepinfos API
      displayName: SleepInfo
      kind: SleepInfo
      name: sleepinfos.kube-green.com
      resources:
      - kind: Secret
        name: sleepinfo
        version: v1
      specDescriptors:
      - description: ExcludeRef define the resource to exclude from the sleep.
        displayName: Exclude Ref
        path: excludeRef
      - description: Patches is a list of json 6902 patches to apply to the target
          resources.
        displayName: Patches
        path: patches
      - description: Patch is the json6902 patch to apply to the target resource.
        displayName: Patch
        path: patches[0].patch
      - description: Target is the target resource to patch.
        displayName: Target
        path: patches[0].target
      - description: Group of the Kubernetes resources.
        displayName: Group
        path: patches[0].target.group
      - description: Kind of the Kubernetes resources.
        displayName: Kind
        path: patches[0].target.kind
      - description: "Hours:Minutes \n Accept cron schedule for both hour and minute.
          For example, *:*/2 is set to configure a run every even minute."
        displayName: Sleep Time
        path: sleepAt
      - description: If SuspendCronjobs is set to true, on sleep the cronjobs of the
          namespace will be suspended.
        displayName: Suspend Cronjobs
        path: suspendCronJobs
      - description: If SuspendDeployments is set to false, on sleep the deployment
          of the namespace will not be suspended. By default Deployment will be suspended.
        displayName: Suspend Deployments
        path: suspendDeployments
      - description: Time zone to set the schedule, in IANA time zone identifier.
          It is not required, default to UTC. For example, for the Italy time zone
          set Europe/Rome.
        displayName: Time Zone
        path: timeZone
      - description: "Hours:Minutes \n Accept cron schedule for both hour and minute.
          For example, *:*/2 is set to configure a run every even minute. It is not
          required."
        displayName: Wake Up Time
        path: wakeUpAt
      - description: "Weekdays are in cron notation. \n For example, to configure
          a schedule from monday to friday, set it to \"1-5\""
        displayName: Weekdays
        path: weekdays
      statusDescriptors:
      - description: Information when was the last time the run was successfully scheduled.
        displayName: Last Schedule Time
        path: lastScheduleTime
      - description: The operation type handled in last schedule. SLEEP or WAKE_UP
          are the possibilities
        displayName: Operation Type
        path: operation
      version: v1alpha1
  description: |
    ## About this Operator

    [kube-green](https://kube-green.dev) shuts down (some of) your resources when you don't need them, reducing the consumption of resources of the cluster.

    Install this operator and apply the SleepInfo CRD to stop your dev namespaces from running during weekends, nights or when it is not necessary.
    See the [docs](https://kube-green.dev/docs/getting-started/) for more information.
    This operator is responsible to suspend and restart pods at specific times, defined by the SleepInfo CRD.

    An example of SleepInfo:

    ```yaml
    apiVersion: kube-green.com/v1alpha1
    kind: SleepInfo
    metadata:
      name: working-hours
    spec:
      weekdays: "1-5"
      sleepAt: "20:00"
      wakeUpAt: "08:00"
      timeZone: "Europe/Rome"
    ```

    This configuration stop pods everyday from monday to friday at 20:00 and restore them at 8:00.
    In this way, your cluster nodes could downscale, producing less CO2 and saving money.
  displayName: kube-green
  icon:
  - base64data: PHN2ZyB3aWR0aD0iNDg3IiBoZWlnaHQ9IjQ4NyIgdmlld0JveD0iMCAwIDQ4NyA0ODciIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CjxwYXRoIGQ9Ik0yMzEuMDE0IDMzLjc0NzVMNzguNDcwNyAxMDYuOUM3MC44MDA2IDExMC41NjMgNjUuMjQ4NCAxMTcuNTQ2IDYzLjMwMjIgMTI1Ljg0NkwyNS42OTU5IDI5MC4wNjZDMjMuODA3IDI5OC4zNjYgMjUuODEwNCAzMDcuMTIzIDMxLjEzMzcgMzEzLjc2M0wxMzYuNjI2IDQ0NS41MjhDMTQxLjk0OSA0NTIuMTY4IDE0OS45NjMgNDU2LjAwMyAxNTguNDM0IDQ1Ni4wMDNIMzI3LjgwNkMzMzYuMjc3IDQ1Ni4wMDMgMzQ0LjI5MSA0NTIuMTY4IDM0OS42MTQgNDQ1LjUyOEw0NTUuMTA2IDMxMy43NjNDNDYwLjQzIDMwNy4xMjMgNDYyLjQzMyAyOTguMzY2IDQ2MC41NDQgMjkwLjA2Nkw0MjIuOTM4IDEyNS44NDZDNDIxLjA0OSAxMTcuNTQ2IDQxNS40MzkgMTEwLjU2MyA0MDcuNzY5IDEwNi45TDI1NS4xNjkgMzMuNzQ3NUMyNDcuNTU2IDMwLjA4NDIgMjM4LjYyNyAzMC4wODQyIDIzMS4wMTQgMzMuNzQ3NVoiIGZpbGw9InVybCgjcGFpbnQwX2xpbmVhcl8yMzQ3XzYxMzEyKSIvPgo8cGF0aCBkPSJNMjMxLjAxNCA3MC41NTAyTDEwNy4zNzcgMTI5Ljg1Qzk5LjcwNjggMTMzLjUxNCA5NC4xNTQ2IDE0MC40OTcgOTIuMjA4NCAxNDguNzk3TDYxLjY5OTggMjgxLjg3OEM1OS44MTA5IDI5MC4xNzggNjEuODE0MyAyOTguOTM2IDY3LjEzNzYgMzA1LjU3NUwxNTIuNjUzIDQxMi4zODRDMTU3Ljk3NyA0MTkuMDI0IDE2NS45OSA0MjIuODU5IDE3NC40NjIgNDIyLjg1OUgzMTEuNzIyQzMyMC4xOTMgNDIyLjg1OSAzMjguMjA3IDQxOS4wMjQgMzMzLjUzIDQxMi4zODRMNDE5LjA0NiAzMDUuNTc1QzQyNC4zNjkgMjk4LjkzNiA0MjYuMzcyIDI5MC4xNzggNDI0LjQ4MyAyODEuODc4TDM5My45NzUgMTQ4Ljc5N0MzOTIuMDg2IDE0MC40OTcgMzg2LjQ3NiAxMzMuNTE0IDM3OC44MDYgMTI5Ljg1TDI1NS4xNjkgNzAuNTUwMkMyNDcuNTU2IDY2Ljg4NjkgMjM4LjYyNyA2Ni44ODY5IDIzMS4wMTQgNzAuNTUwMloiIGZpbGw9IndoaXRlIi8+CjxwYXRoIGQ9Ik0yMzEuMDEzIDkyLjg3NjRMMTI0Ljg5MSAxNDMuODJDMTE3LjIyMSAxNDcuNDgzIDExMS42NjkgMTU0LjQ2NiAxMDkuNzIzIDE2Mi43NjZMODMuNTY0MSAyNzcuMDE2QzgxLjY3NTIgMjg1LjMxNSA4My42Nzg2IDI5NC4wNzMgODkuMDAxOCAzMDAuNzEzTDE2Mi4zODMgMzkyLjM1M0MxNjcuNzA2IDM5OC45OTMgMTc1LjcyIDQwMi44MjggMTg0LjE5MSA0MDIuODI4SDMwMi4wNDdDMzEwLjUxOSA0MDIuODI4IDMxOC41MzIgMzk4Ljk5MyAzMjMuODU1IDM5Mi4zNTNMMzk3LjIzNiAzMDAuNzEzQzQwMi41NiAyOTQuMDczIDQwNC41NjMgMjg1LjMxNSA0MDIuNjc0IDI3Ny4wMTZMMzc2LjUxNiAxNjIuNzY2QzM3NC42MjcgMTU0LjQ2NiAzNjkuMDE3IDE0Ny40ODMgMzYxLjM0NyAxNDMuODJMMjU1LjIyNSA5Mi44NzY0QzI0Ny42MTIgODkuMjEzMSAyMzguNjgzIDg5LjIxMzEgMjMxLjA3IDkyLjg3NjRIMjMxLjAxM1oiIGZpbGw9IiMwMDQ5M0MiLz4KPHBhdGggZD0iTTgzLjQ1MjEgMjc3LjMwNkw5OC42MjA2IDIxMS4xMzdDMjAzLjU0IDIxMi4xNjcgMjA0LjExMyAzMTguNjkgMzEwLjA2MyAzMTguNjlDMzU0LjI1MiAzMTguNjkgMzgwLjEyNCAzMDAuMDg3IDQwMi44NDggMjc4LjM5M0M0MDQuNDUxIDI4Ni45MjIgNDAyLjMzMyAyOTUuNzk0IDM5Ni44MzggMzAyLjYwNUwzMjQuNTQ1IDM5Mi45MjlDMzE4LjgyMSA0MDAuMDg0IDMxMC4xNzggNDA0LjIwNSAzMDEuMDE5IDQwNC4yMDVIMTg1LjA1MkMxNzUuODk0IDQwNC4yMDUgMTY3LjI1MSA0MDAuMDI3IDE2MS41MjcgMzkyLjkyOUw4OS4yMzMzIDMwMi42MDVDODMuNTA5NCAyOTUuNDUgODEuMzkxNSAyODYuMTc4IDgzLjQ1MjEgMjc3LjI0OFYyNzcuMzA2WiIgZmlsbD0iIzdFRUJCOSIvPgo8cGF0aCBkPSJNODMuNzk0MyAyNzcuNDcyTDkwLjIwNTEgMjQ5LjU5NkMxMDAuMDUgMjQ3LjUzNSAxMTEuMDQgMjQ2LjIxOSAxMjMuODA1IDI0Ni4yMTlDMjM0LjU2MyAyNDYuMjE5IDIzNC41NjMgMzUzLjY1NyAzNDUuMjY0IDM1My42NTdDMzQ5LjA0MiAzNTMuNjU3IDM1Mi43MDUgMzUzLjU0MyAzNTYuMjU0IDM1My4yNTdMMzI0LjU0MyAzOTIuODY2QzMxOC44MiAzOTkuOTY0IDMxMC4xNzYgNDA0LjE0MiAzMDEuMDc1IDQwNC4xNDJIMTg1LjI4QzE3Ni4xMjIgNDA0LjE0MiAxNjcuNDc4IDQwMC4wMjEgMTYxLjgxMiAzOTIuODY2TDg5LjYzMjcgMzAyLjcxNEM4My45MDg4IDI5NS42MTYgODEuNzkwOSAyODYuMjg2IDgzLjg1MTUgMjc3LjQxNEw4My43OTQzIDI3Ny40NzJaIiBmaWxsPSIjMjE5Mzg0Ii8+CjxwYXRoIGQ9Ik04My40NTA1IDI3Ny4yOTZMOTAuODM0NCAyNDUuMTI3QzEwNC44NTggMjQyLjI2NSAxMjAuOTQyIDI0MS4xMjEgMTQwLjM0NyAyNDIuNTUyQzI1MS42NzcgMjUwLjk2NiAyNTAuOTkgMzQ0LjcyNCAzNDcuMjEgMzY0LjY0M0wzMjQuNiAzOTIuOTJDMzE4Ljg3NiA0MDAuMDc1IDMxMC4yMzMgNDA0LjE5NiAzMDEuMDc1IDQwNC4xOTZIMTg1LjEwOEMxNzUuOTUgNDA0LjE5NiAxNjcuMzA2IDQwMC4wMTcgMTYxLjU4MiAzOTIuOTJMODkuMjg4OSAzMDIuNTk2QzgzLjU2NSAyOTUuNDQxIDgxLjQ0NzIgMjg2LjE2OCA4My41MDc4IDI3Ny4yMzlMODMuNDUwNSAyNzcuMjk2WiIgZmlsbD0iIzAwODU3NSIvPgo8cGF0aCBkPSJNODMuNDUyMSAyNzcuMzAyTDg3LjIyOTkgMjYwLjg3NEM5Ny4zMDQxIDI1OS44NDQgMTA4LjM1MSAyNTkuNjE1IDEyMC44ODcgMjYwLjUzMUMyMzMuOTM1IDI2OS4wNTkgMjMxLjUzMSAzNjUuNTA4IDMzMi4xNTggMzgzLjQ4MUwzMjQuNTQ1IDM5Mi45ODNDMzE4LjgyMSA0MDAuMTM4IDMxMC4xNzggNDA0LjI1OSAzMDEuMDE5IDQwNC4yNTlIMTg1LjA1MkMxNzUuODk0IDQwNC4yNTkgMTY3LjI1MSA0MDAuMDgxIDE2MS41MjcgMzkyLjk4M0w4OS4yMzMzIDMwMi42NTlDODMuNTA5NCAyOTUuNTA0IDgxLjM5MTUgMjg2LjIzMSA4My40NTIxIDI3Ny4zMDJaIiBmaWxsPSIjMDA2NTU3Ii8+CjxwYXRoIGQ9Ik0yMTUuOTAyIDMyNC4xMjJDMjA3LjE0NSAzMjQuMTIyIDE5Ny43NTggMzIzLjY2NCAxODcuODU1IDMyMi42OTFDMTcwLjIyNSAyNzIuMDM0IDE3MC4xMTEgMjMzLjg1NiAxODcuNTEyIDIwOS4yNDNDMjA3LjIwMiAxODEuNDI0IDI0NS44OTYgMTc1LjU4NiAyNzQuODU5IDE3NS41ODZDMjg3LjA1MSAxNzUuNTg2IDI5Ny4xMjUgMTc2LjYxNiAzMDIuNzM1IDE3Ny4zNkMzMDguNDU5IDE5Mi4yNDMgMzI5LjAwOCAyNTIuMTcyIDMwMy41OTMgMjkwLjAwOEMyODguMzY4IDMxMi42NzQgMjU4Ljg4OSAzMjQuMTIyIDIxNS45MDIgMzI0LjEyMloiIGZpbGw9IiMxNUUzOUIiLz4KPHBhdGggZD0iTTI3NC44NiAxODIuNTY3QzI4NC4wNzUgMTgyLjU2NyAyOTIuMDMyIDE4My4xOTcgMjk3LjU4NCAxODMuNzY5QzMwNC4zMzggMjAyLjU0NCAzMTkuNDQ5IDI1My43MTYgMjk3LjY5OCAyODYuMDU2QzI4My44NDYgMzA2LjYwNSAyNTYuMzE0IDMxNy4wMjMgMjE1Ljg0NiAzMTcuMDIzQzIwOC42OTEgMzE3LjAyMyAyMDEuMDIxIDMxNi42NzkgMTkzLjAwNyAzMTYuMDVDMTc3LjYxIDI2OS44IDE3Ny42NjcgMjM1LjIyOCAxOTMuMjM2IDIxMy4yNDhDMjExLjE1MiAxODcuODkxIDI0Ny40OTkgMTgyLjU2NyAyNzQuODAyIDE4Mi41NjdNMjc0LjgwMiAxNjguNDg2QzIyMi4xNDIgMTY4LjQ4NiAxMzEuNzYxIDE4Ny41NDcgMTgyLjMwNCAzMjguMTg0TDE4MS41NTkgMzI5LjFDMTgxLjk2IDMyOS4xIDE4Mi4yNDYgMzI5LjEgMTgyLjY0NyAzMjkuMjE1QzE4Mi43NjEgMzI5LjU1OCAxODIuODc2IDMyOS45MDIgMTgyLjk5IDMzMC4yNDVMMTgzLjczNCAzMjkuMzI5QzE5NS4zNTQgMzMwLjU4OCAyMDYuMDU4IDMzMS4xNjEgMjE1Ljg0NiAzMzEuMTYxQzM2OC45MDQgMzMxLjE2MSAzMTUuNSAxODkuODk0IDMwOC4xMTYgMTcxLjk3OEMzMDguMTE2IDE3MS45NzggMzA4LjExNiAxNzEuODYzIDMwNy43MTUgMTcxLjAwNUwzMDYuNjg1IDE3MC44MzNDMzAyLjEwNiAxNzAuMTQ2IDI5MC4wMjggMTY4LjU0NCAyNzQuODAyIDE2OC41NDRWMTY4LjQ4NloiIGZpbGw9IndoaXRlIi8+CjxwYXRoIGQ9Ik0xNDUuMTU2IDM4MS41MzdMMTM0LjA1MSAzNzIuODM2TDIyMS41NyAyNjcuNjNMMjE1LjUwMyAyMzYuNzc4TDIyOS4zNTUgMjM0LjA4OEwyMzYuNjI0IDI3MS4yOTRMMTQ1LjE1NiAzODEuNTM3WiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTIzMS42NDYgMjc1Ljk4N0wyMjYuNTUxIDI2Mi45MzZMMjczLjk0NiAyNDQuNTYyTDI3OS4wNCAyNTcuNjdMMjMxLjY0NiAyNzUuOTg3WiIgZmlsbD0id2hpdGUiLz4KPGRlZnM+CjxsaW5lYXJHcmFkaWVudCBpZD0icGFpbnQwX2xpbmVhcl8yMzQ3XzYxMzEyIiB4MT0iMzUuNzcwMSIgeTE9IjEzMi4wODUiIHgyPSI0OTQuODMxIiB5Mj0iNDEzLjcwMyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiPgo8c3RvcCBvZmZzZXQ9IjAuMDIiIHN0b3AtY29sb3I9IiMxNUUzOUIiLz4KPHN0b3Agb2Zmc2V0PSIwLjE3IiBzdG9wLWNvbG9yPSIjMTREMTkyIi8+CjxzdG9wIG9mZnNldD0iMC40OCIgc3RvcC1jb2xvcj0iIzExQTM3QyIvPgo8c3RvcCBvZmZzZXQ9IjAuOTEiIHN0b3AtY29sb3I9IiMwRDVBNUEiLz4KPHN0b3Agb2Zmc2V0PSIwLjk2IiBzdG9wLWNvbG9yPSIjMEQ1MTU2Ii8+CjwvbGluZWFyR3JhZGllbnQ+CjwvZGVmcz4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - kube-green.com
          resources:
          - sleepinfos
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - kube-green.com
          resources:
          - sleepinfos/finalizers
          verbs:
          - update
        - apiGroups:
          - kube-green.com
          resources:
          - sleepinfos/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: kube-green-controller-manager
      deployments:
      - label:
          app: kube-green
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: kube-green
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: kube-green
          control-plane: controller-manager
        name: kube-green-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: kube-green
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app: kube-green
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: docker.io/kubegreen/kube-green:0.6.0-rc.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 400m
                    memory: 400Mi
                  requests:
                    cpu: 100m
                    memory: 50Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: kube-green-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: kube-green-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - green
  - green software
  - resources
  - downscale
  - autoscale
  - climate change
  links:
  - name: Homepage
    url: https://kube-green.dev
  - name: Source Code
    url: https://github.com/kube-green/kube-green
  maintainers:
  - email: bianchidavide12+kubegreen@gmail.com
    name: Davide
  maturity: alpha
  minKubeVersion: 1.19.0
  provider:
    name: kube-green Community
    url: https://kube-green.dev
  replaces: kube-green.v0.5.2
  version: 0.6.0-rc.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: kube-green-controller-manager
    failurePolicy: Fail
    generateName: vsleepinfo.kb.io
    rules:
    - apiGroups:
      - kube-green.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - sleepinfos
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-kube-green-com-v1alpha1-sleepinfo
