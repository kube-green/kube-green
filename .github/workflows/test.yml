name: "Test and build"
on:
  push:
    branches:
      - "main"
    tags:
      - '*'
  pull_request:
    branches:
      - "main"
jobs:
  tests:
    name: Test k8s ${{ matrix.k8s_version }} on os ${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        k8s_version:
          - 'v1.33.1'
          - 'v1.32.5'
          - 'v1.31.9'
          - 'v1.30.13'
          - 'v1.29.14'
          - 'v1.28.15'
          - 'v1.27.16'
    env:
      KIND_K8S_VERSION: ${{matrix.k8s_version}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Go with bin cache
        uses: ./.github/actions/setup-go-with-cache
      - name: docker version
        run: docker version
      - name: Go version
        run: go version
      - name: Go get dependencies
        run: go mod download
      - name: Run lint
        run: make lint
      - name: Run tests with coverage
        run: make ci-coverage
      - name: Vet and Build
        run: make
      - name: Send the coverage output
        uses: shogo82148/actions-goveralls@25f5320d970fb565100cf1993ada29be1bb196a1 # v1.10.0
        with:
          path-to-profile: cover.out
          flag-name: k8s-${{matrix.k8s_version}}
          parallel: true
  finish:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@25f5320d970fb565100cf1993ada29be1bb196a1 # v1.10.0
        with:
          parallel-finished: true

  e2e-kustomize:
    name: e2e test with kustomize in kind cluster
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Go with bin cache
        uses: ./.github/actions/setup-go-with-cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Run tests
        run: make e2e-test-kustomize
      - name: 'Upload Log Artifact'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ failure() }}
        with:
          name: e2e-logs-kustomize-${{ github.run_id }}
          path: ./tests/integration/tests-logs/
          retention-days: 1

  e2e-helm:
    name: e2e test with helm in kind cluster
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Go with bin cache
        uses: ./.github/actions/setup-go-with-cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
      - name: Run tests
        run: make e2e-test
      - name: 'Upload Log Artifact'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ failure() }}
        with:
          name: e2e-logs-helm-${{ github.run_id }}
          path: ./tests/integration/tests-logs/
          retention-days: 1

  docker-build:
    name: Build docker
    needs: [tests, e2e-kustomize, e2e-helm]
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Go with bin cache
        uses: ./.github/actions/setup-go-with-cache
      - name: Run Trivy (repo mode)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Build multi-arch
        run: make build-multi-arch
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ghcr.io/kube-green/kube-green
            docker.io/kubegreen/kube-green
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
          flavor: |
            latest=false
          annotations: |
            org.opencontainers.image.authors=The kube-green team
            org.opencontainers.image.source=github.com/kube-green/kube-green/commit/${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=The kube-green team
            org.opencontainers.image.source=github.com/kube-green/kube-green/commit/${{ github.sha }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Docker Login to ghcr.io
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: ${{ steps.buildx.outputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-community-operators:
    name: Release community operator
    uses: ./.github/workflows/community-operators.yml
    needs: docker-build
    with:
      community-operator-fork: kube-green/community-operators
      community-operator-repo: k8s-operatorhub/community-operators
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.KUBE_GREEN_OPERATOR_FORK_PR }}

  release-community-operators-prod:
    name: Release community operator prod
    uses: ./.github/workflows/community-operators.yml
    needs: docker-build
    with:
      community-operator-fork: kube-green/community-operators-prod
      community-operator-repo: redhat-openshift-ecosystem/community-operators-prod
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.KUBE_GREEN_OPERATOR_FORK_PR }}

  release-helm:
    name: Release Helm Chart
    uses: ./.github/workflows/helm.yaml
    needs: docker-build
    with:
      release: true
    secrets:
      GH_PAT_UPDATE_CONTENTS: ${{ secrets.GH_PAT_UPDATE_CONTENTS }}
