---
# Source: kube-green/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-green-controller-manager
  namespace: default
  labels:
    helm.sh/chart: HELM_CHART_VERSION_REDACTED
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-green/templates/crds/sleepinfo.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/kube-green-serving-cert
    helm.sh/resource-policy: keep
    creationTimestamp: null
  name: sleepinfos.kube-green.com
spec:
  group: kube-green.com
  names:
    kind: SleepInfo
    listKind: SleepInfoList
    plural: sleepinfos
    singular: sleepinfo
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SleepInfo is the Schema for the sleepinfos API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SleepInfoSpec defines the desired state of SleepInfo
            properties:
              excludeRef:
                description: |-
                  ExcludeRef define the resource to exclude from the sleep.
                  Exclusion rules are evaluated in AND condition.
                items:
                  description: Define a resource to filter, used to include or exclude
                    resources from the sleep.
                  properties:
                    apiVersion:
                      description: ApiVersion of the kubernetes resources.
                      type: string
                    kind:
                      description: Kind of the kubernetes resources of the specific
                        version.
                      type: string
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels which identify the kubernetes resource
                        by labels
                      type: object
                    name:
                      description: Name which identify the kubernetes resource.
                      type: string
                  type: object
                type: array
              includeRef:
                description: |-
                  IncludeRef define the resource to include from the sleep.
                  Inclusion rules are evaluated in AND condition.
                items:
                  description: Define a resource to filter, used to include or exclude
                    resources from the sleep.
                  properties:
                    apiVersion:
                      description: ApiVersion of the kubernetes resources.
                      type: string
                    kind:
                      description: Kind of the kubernetes resources of the specific
                        version.
                      type: string
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels which identify the kubernetes resource
                        by labels
                      type: object
                    name:
                      description: Name which identify the kubernetes resource.
                      type: string
                  type: object
                type: array
              patches:
                description: Patches is a list of json 6902 patches to apply to the
                  target resources.
                items:
                  properties:
                    patch:
                      description: Patch is the json6902 patch to apply to the target
                        resource.
                      type: string
                    target:
                      description: Target is the target resource to patch.
                      properties:
                        group:
                          description: Group of the Kubernetes resources.
                          type: string
                        kind:
                          description: Kind of the Kubernetes resources.
                          type: string
                      required:
                      - group
                      - kind
                      type: object
                  required:
                  - patch
                  - target
                  type: object
                type: array
              sleepAt:
                description: |-
                  Hours:Minutes


                  Accept cron schedule for both hour and minute.
                  For example, *:*/2 is set to configure a run every even minute.
                type: string
              suspendCronJobs:
                description: If SuspendCronjobs is set to true, on sleep the cronjobs
                  of the namespace will be suspended.
                type: boolean
              suspendDeployments:
                description: If SuspendDeployments is set to false, on sleep the deployment
                  of the namespace will not be suspended. By default Deployment will
                  be suspended.
                type: boolean
              suspendStatefulSets:
                description: If SuspendStatefulSets is set to false, on sleep the
                  statefulset of the namespace will not be suspended. By default StatefulSet
                  will be suspended.
                type: boolean
              timeZone:
                description: |-
                  Time zone to set the schedule, in IANA time zone identifier.
                  It is not required, default to UTC.
                  For example, for the Italy time zone set Europe/Rome.
                type: string
              wakeUpAt:
                description: |-
                  Hours:Minutes


                  Accept cron schedule for both hour and minute.
                  For example, *:*/2 is set to configure a run every even minute.
                  It is not required.
                type: string
              weekdays:
                description: |-
                  Weekdays are in cron notation.


                  For example, to configure a schedule from monday to friday, set it to "1-5"
                type: string
            required:
            - sleepAt
            - weekdays
            type: object
          status:
            description: SleepInfoStatus defines the observed state of SleepInfo
            properties:
              lastScheduleTime:
                description: Information when was the last time the run was successfully
                  scheduled.
                format: date-time
                type: string
              operation:
                description: |-
                  The operation type handled in last schedule. SLEEP or WAKE_UP are the
                  possibilities
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: kube-green/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-manager-role-aggregate
  labels:
    kube-green.dev/aggregate-to-manager: "true"
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kube-green.com
  resources:
  - sleepinfos
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kube-green.com
  resources:
  - sleepinfos/finalizers
  verbs:
  - update
- apiGroups:
  - kube-green.com
  resources:
  - sleepinfos/status
  verbs:
  - get
  - patch
  - update
---
# Source: kube-green/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-manager-role
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      kube-green.dev/aggregate-to-manager: "true"
rules: [] # The control plane automatically fills in the rules
---
# Source: kube-green/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-manager-role-custom-aggregate
  labels:
    kube-green.dev/aggregate-to-manager: "true"
rules:
  - apiGroups:
    - traefik.io
    resources:
    - ingressroute
    verbs:
    - get
    - list
    - patch
    - update
    - watch
---
# Source: kube-green/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: kube-green/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: kube-green/templates/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-green-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-green-manager-role
subjects:
- kind: ServiceAccount
  name: kube-green-controller-manager
  namespace: default
---
# Source: kube-green/templates/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-green-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-green-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: kube-green-controller-manager
  namespace: default
---
# Source: kube-green/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-green-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kube-green/templates/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-green-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-green-leader-election-role
subjects:
- kind: ServiceAccount
  name: kube-green-controller-manager
  namespace: default
---
# Source: kube-green/templates/metrics/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kube-green
    control-plane: controller-manager
    helm.sh/chart: HELM_CHART_VERSION_REDACTED
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  name: kube-green-controller-manager-metrics-service
  namespace: default
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    control-plane: controller-manager
---
# Source: kube-green/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-green-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: kube-green/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-green
    control-plane: controller-manager
    helm.sh/chart: HELM_CHART_VERSION_REDACTED
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  name: kube-green-controller-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-green
      control-plane: controller-manager
      app.kubernetes.io/name: kube-green
      app.kubernetes.io/instance: release-test
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: kube-green
        control-plane: controller-manager
        app.kubernetes.io/name: kube-green
        app.kubernetes.io/instance: release-test
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --metrics-secure=true
        - --metrics-cert-path=/tmp/k8s-metrics-server/metrics-certs
        - --health-probe-bind-address=:8081
        - --leader-elect
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        - --sleep-delta=60
        - --max-concurrent-reconciles=20
        command:
        - /kube-green
        image: kubegreen/kube-green:0.7.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
        
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tmp/k8s-metrics-server/metrics-certs
          name: metrics-cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-green-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - name: metrics-cert
        secret:
          secretName: metrics-server-cert
          items:
            - key: ca.crt
              path: ca.crt
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
---
# Source: kube-green/templates/cert-manager.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kube-green-serving-cert
  namespace: default
spec:
  dnsNames:
  - kube-green-webhook-service.default.svc
  - kube-green-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kube-green-selfsigned-issuer
  secretName: webhook-server-cert
---
# Source: kube-green/templates/cert-manager.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kube-green-metrics-certs
  namespace: default
spec:
  dnsNames:
  - kube-green-controller-manager-metrics-service.default.svc
  - kube-green-controller-manager-metrics-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kube-green-selfsigned-issuer
  secretName: metrics-server-cert
---
# Source: kube-green/templates/cert-manager.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kube-green-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: kube-green/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/kube-green-serving-cert
  name: kube-green-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kube-green-webhook-service
      namespace: default
      path: /validate-kube-green-com-v1alpha1-sleepinfo
  failurePolicy: Fail
  name: vsleepinfo.kb.io
  rules:
  - apiGroups:
    - kube-green.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - sleepinfos
  sideEffects: None
