apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-green
    control-plane: controller-manager
    {{- include "kube-green.labels" . | nindent 4 }}
  name: kube-green-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-green
      control-plane: controller-manager
      {{- include "kube-green.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: kube-green
        control-plane: controller-manager
        {{- include "kube-green.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image:  "{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}"
        imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- if .Values.manager.resources }}
        resources:
        {{ toYaml .Values.manager.resources | nindent 10 }}
        {{- else }}
        resources: {}
        {{- end }}
        {{- if .Values.manager.securityContext }}
        securityContext:
        {{ toYaml .Values.manager.securityContext | nindent 10 }}
        {{- else }}
        securityContext: {}
        {{- end }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr={{ .Values.manager.logtostderr }}
        - --v={{ .Values.manager.verbosity }}
        image: "{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
        imagePullPolicy: {{ .Values.kubeRbacProxy.image.pullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        {{- if .Values.manager.securityContext }}
        securityContext:
        {{ toYaml .Values.manager.securityContext | nindent 10 }}
        {{- else }}
        securityContext: {}
        {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}